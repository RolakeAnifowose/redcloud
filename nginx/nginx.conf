# server {
#     listen 80;
#     server_name localhost;

#     location /api/v1 {
#         proxy_pass http://flasknew:5000/api/v1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }

#     location /healthcheck {
#         proxy_pass http://flasknew:5000/healthcheck;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }

#     location / {
#         return 404;
#     }
# }

# server {
#     listen 80;
#     server_name localhost;

#     location /api/v1 {
#         proxy_pass http://localhost:5000/api/v1;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }

#     location /healthcheck {
#         proxy_pass http://localhost:5000/healthcheck;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#     }

#     location / {
#         return 404;
#     }
# }

events {
  worker_connections 1024;
}

http {
  # NGINX will handle gzip compression of responses from the app server
  gzip on;
  gzip_proxied any;
  gzip_types text/plain application/json;
  gzip_min_length 1000;

  server {
    listen 80;

    # NGINX will reject anything not matching /api
    location /api/v1 {
      proxy_pass http://localhost:5000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }

    location /healthcheck {
      proxy_pass http://localhost:5000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_cache_bypass $http_upgrade;
    }

    location / {
      return 404
    }
  }
}

